/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SrivatsanTalkad
 */
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonP1 = new javax.swing.JButton();
        jButtonP2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(60, 188, 148));
        setForeground(java.awt.Color.green);

        jTextArea1.setBackground(new java.awt.Color(153, 255, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 109, 79));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.getAccessibleContext().setAccessibleName("");

        jButtonP1.setBackground(new java.awt.Color(0, 153, 102));
        jButtonP1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonP1.setActionCommand("Roll Player 1's Dice!");
        jButtonP1.setText("Roll Player 1's Dice!");
        jButtonP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP1ActionPerformed(evt);
            }
        });

        jButtonP2.setBackground(new java.awt.Color(0, 153, 102));
        jButtonP2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonP2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonP2.setText("Roll Player 2's Dice!");
        jButtonP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP2ActionPerformed(evt);
            }
        });

        jTextArea2.setBackground(new java.awt.Color(51, 204, 0));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(179, 57, 8));
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Snakes and Ladders");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Player 1");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Player 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonP2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonP1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel2)
                .addGap(104, 104, 104)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonP1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonP2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jButtonP1.getAccessibleContext().setAccessibleName("Roll Player 2's Dice");

        pack();
    }// </editor-fold>                        
    
    // when either player meets winning condition won is set to true
    static boolean won = false;
    
    // players start at 0
    static int player1Position = 0;    static int player2Position = 0;
    
    // board size, positions where the snakes and ladders are, values are arbitrary
    final int BOARD_SIZE = 100;
    final int SNAKE1_POSITION = 99;    final int SNAKE2_POSITION = 98;    final int SNAKE3_POSITION = 97;
    final int LADDER1_POSITION = 5;    final int LADDER2_POSITION = 16;    final int LADDER3_POSITION = 27;    final int LADDER4_POSITION = 38;
        
    // Boolean flags to make sure that players 1 and 2 take turns after every button press
    static boolean player2Went = true;    static boolean player1Went = true; 
    
    java.util.Random dice = new java.util.Random();
    int diceRoll; 
    
    /**
     * Generates a random number between 1 and 6 inclusively.
     * @return Some random integer in range (1, 7)
     */
    private int rollDice() 
    {
        return dice.nextInt(6) + 1;
    }

    /**
     * Starts turn for player and calculates a new position.
     * @param playerNumber The player number as a string ("1" or "2")
     * @param playerPosition The current player position
     * @param jTextArea The text area where the new position is appended to.
     * @return An integer representing the calculated player's position.
     */
    private int startTurn(String playerNumber, int playerPosition, javax.swing.JTextArea jTextArea) 
    {
        diceRoll = rollDice();
        playerPosition += diceRoll;
        
        jTextArea.append("\nPlayer " + playerNumber + " rolled: " + diceRoll + " | Player advances to position: " + playerPosition);

        if (playerPosition == SNAKE1_POSITION || playerPosition == SNAKE2_POSITION) 
        {
            playerPosition -= 10;
            jTextArea.append("\nLanded on snake! Player " + playerNumber + " goes back to position: " + playerPosition);
        } else if (playerPosition == LADDER1_POSITION || playerPosition == LADDER2_POSITION) 
        {
            playerPosition += 10;
            jTextArea.append("\nLanded on ladder! Player " + playerNumber + " advances to position: " + playerPosition);
        }
        jTextArea.append("\n\n");
        return playerPosition;
    }
    /**
     * Starts Player 1's turn when button is pressed and checks condition to win after.
     * @param evt 
     */
    private void jButtonP1ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if (player2Went)
        {
            player2Went = false;
            player1Went = true;
            if (!won) 
            {
                player1Position = startTurn("1", player1Position, jTextArea1);
            }
            if (player1Position >= BOARD_SIZE && !won) 
            {
                jTextArea1.append("\n\nPlayer 1 wins!");
                won = true;
            }
        } else
        {
            jTextArea1.append("\nIt is not your turn.\n");
        }
    }                                         

    /**
     * Starts Player 2's turn when button is pressed and checks condition to win after.
     * @param evt 
     */
    private void jButtonP2ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if (player1Went)
        {
            player1Went = false;
            player2Went = true;
            if (!won) 
            {
                player2Position = startTurn("2", player2Position, jTextArea2);
            }
            if (player2Position >= BOARD_SIZE && !won) 
            {
                jTextArea2.append("\n\nPlayer 2 wins!");
                won = true;
            }
        } else
        {
            jTextArea2.append("\nIt is not your turn.\n");
        }
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonP1;
    private javax.swing.JButton jButtonP2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration                   
}
